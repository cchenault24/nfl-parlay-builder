import React, { useState } from "react";
import { Typography, Box, Button } from "@mui/material";
import { Save as SaveIcon, Login as LoginIcon } from "@mui/icons-material";
import { useAuth } from "../../contexts/AuthContext";
import { saveParlayToUser } from "../../config/firebase";
import useParlayStore from "../../store/parlayStore";
import useModalStore from "../../store/modalStore";

const ParlayDisplay: React.FC = () => {
  const { user } = useAuth();
  const [saving, setSaving] = useState(false);
  const parlay = useParlayStore((state) => state.parlay);
  const setAuthModalOpen = useModalStore((state) => state.setAuthModalOpen);
  const setSaveParlaySuccess = useParlayStore(
    (state) => state.setSaveParlaySuccess
  );
  const setSaveParlayError = useParlayStore(
    (state) => state.setSaveParlayError
  );

  const handleSaveParlay = async () => {
    if (!user) {
      setAuthModalOpen(true);
      return;
    }

    if (!parlay) return;

    setSaving(true);
    setSaveParlayError("");
    setSaveParlaySuccess(false);

    try {
      await saveParlayToUser(user.uid, parlay);
      setSaveParlaySuccess(true);
      setTimeout(() => setSaveParlaySuccess(false), 3000); // Clear success message after 3 seconds
    } catch (error) {
      setSaveParlayError("Failed to save parlay. Please try again.");
      console.error("Error saving parlay:", error);
    } finally {
      setSaving(false);
    }
  };

  return (
    parlay && (
      <Box>
        <Typography variant="subtitle1" fontWeight="bold" sx={{ mb: 1 }}>
          AI Analysis:
        </Typography>
        <Typography variant="body2" color="text.secondary" sx={{ mb: 2 }}>
          {parlay.aiReasoning}
        </Typography>

        <Box
          sx={{
            display: "flex",
            alignItems: "center",
            justifyContent: "space-between",
            mb: 2,
          }}
        >
          <Typography variant="caption" color="text.secondary">
            Overall Confidence: {parlay.overallConfidence}/10
          </Typography>
          <Typography
            variant="caption"
            color="text.secondary"
            sx={{ fontWeight: 500 }}
          >
            ✨ Generated by AI •{" "}
            {new Date(parlay.createdAt).toLocaleTimeString()}
          </Typography>
        </Box>

        {/* Save Button */}
        <Box sx={{ display: "flex", justifyContent: "center", mt: 3 }}>
          <Button
            variant="outlined"
            startIcon={user ? <SaveIcon /> : <LoginIcon />}
            onClick={handleSaveParlay}
            disabled={saving}
            sx={{
              px: 3,
              py: 1,
              textTransform: "none",
            }}
          >
            {saving ? "Saving..." : user ? "Save Parlay" : "Sign In to Save"}
          </Button>
        </Box>
      </Box>
    )
  );
};

export default ParlayDisplay;
